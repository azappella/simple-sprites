var settings, CONSTANTS, defaults, spriteDocument, inputFolder, inputFiles, currentFile;settings = {	folderDialog: "Select a folder to process",	fileFilter: "*",	document: {		resolution: 72,		name: "Sprites",		mode: NewDocumentMode.RGB,		initialFill: DocumentFill.TRANSPARENT,		pixelAspectRatio: 1	},	preferences: {		rulerUnits: Units.PIXELS,		typeUnits: TypeUnits.PIXELS,		displayDialogs: DialogModes.NO	}};CONSTANTS = {	EXCEPTIONS: {		NO_INPUT: 'noInput',		BAD_DOC: 'badDoc'	}};defaults = {	rulerUnits: app.preferences.rulerUnits,	typeUnits: app.preferences.typeUnits,	displayDialogs: app.displayDialogs};app.preferences.rulerUnits = settings.preferences.rulerUnits;app.preferences.typeUnits = TypeUnits.PIXELS;app.displayDialogs = DialogModes.NO;inputFolder = Folder.selectDialog(settings.folderDialog);if (inputFolder === null) {	throw CONSTANTS.EXCEPTIONS.NO_INPUT;}inputFiles = inputFolder.getFiles(settings.fileFilter);for (var i = 0; i < inputFiles.length; i++) {	if ((inputFiles[i] instanceof File) && (!inputFiles[i].hidden)) {		currentFile = open(inputFiles[i]);		if (currentFile === null) {			throw CONSTANTS.EXCEPTIONS.BAD_DOC;		}		try {			currentFile.mergeVisibleLayers();		} catch (e) {}				currentFile.selection.selectAll();		currentFile.selection.copy();		if (typeof(spriteDocument) != 'undefined') {			app.activeDocument = spriteDocument;			spriteDocument.resizeCanvas((spriteDocument.width + currentFile.width), ((spriteDocument.height >= currentFile.height) ? spriteDocument.height : currentFile.height), AnchorPosition.TOPLEFT);		} else {			spriteDocument = app.documents.add(currentFile.width, currentFile.height, settings.document.resolution, settings.document.name, settings.document.mode, settings.document.initialFill, settings.document.pixelAspectRatio);		}    	spriteDocument.selection.select([[(spriteDocument.width - currentFile.width), 0], [spriteDocument.width, 0], [spriteDocument.width, currentFile.height], [(spriteDocument.width - currentFile.width), currentFile.height]]);		spriteDocument.paste(true);				currentFile.close(SaveOptions.DONOTSAVECHANGES);	}}app.preferences.rulerUnits = defaults.rulerUnits;app.preferences.typeUnits = defaults.typeUnits;app.displayDialogs = defaults.displayDialogs;